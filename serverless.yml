service: graphql

package:
  excludeDevDependencies: false
  individually: true
  exclude:
    - node_modules/**
    - mocks/**

provider:
  name: aws
  # apiKeys:
  #   - ${self:service}-Key
  runtime: nodejs12.x
  region: eu-west-3
  stage: dev
  timeOut: 10
  profile: ${self:custom.app.config.profile}
  environment: ${file(env.yml)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: [!GetAtt usersTable.Arn]

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-offline
  - serverless-dynamodb-local

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  prune:
    automatic: true
    number: 3
  stage: ${opt:stage, self:provider.stage}
  app:
    config: ${file(config-${self:custom.stage}.yml)}
  serverless-offline:
    httpPort: 3030
    host: 0.0.0.0
  dynamodb:
    stages:
      - dev
    start:
      host: 0.0.0.0
      port: 8080
      inMemory: true
      migrate: true
      migration: true
      seed: true
    seed:
      all:
        sources: ${file(mocks/_resources.yml)}

functions:
  graphql:
    handler: src/graphql.main
    events:
      - http:
          path: /graphql
          method: post
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    followersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stage}-followers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: following
            AttributeType: S
          - AttributeName: follower
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: followerIndex
            KeySchema:
              - AttributeName: follower
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: followingIndex
            KeySchema:
              - AttributeName: following
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
